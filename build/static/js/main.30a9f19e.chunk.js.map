{"version":3,"sources":["components/RestCountries/services/countriesTAPI.js","components/RestCountries/FormCountriesByString.js","components/RestCountries/CountryRow.js","components/RestCountries/FilterCountriesByString.js","components/Notification/Notification.js","components/Notification/OkNotification.js","components/RestCountries/AppCountries.js","components/PhoneBook/FormPersonsByString.js","components/PhoneBook/PersonRow.js","components/PhoneBook/services/personsTAPI.js","components/PhoneBook/FilterPersonsByString.js","components/PhoneBook/FormPersonAdd.js","components/PhoneBook/AppPhoneBook.js","components/Notes/NoteRow.js","components/Notes/services/notesTAPI.js","components/Notes/AppNotes.js","components/Clock/Clock.js","components/Temperature/TemperatureInput.js","components/Temperature/TryConvert.js","components/Temperature/toCelsius.js","components/Temperature/toFahrenheit.js","components/Temperature/BoilingVerdict.js","components/Temperature/TemperatureCalculator.js","components/Kurssi/Otsikko.js","components/Kurssi/Sisalto.js","components/Kurssi/Yhteensa.js","components/Kurssi/Kurssi.js","components/Kurssi/Kurssit.js","App.js","datafiles/Notes/notes.js","datafiles/Kurssit/halfstackkurssi.js","datafiles/Kurssit/nodekurssi.js","components/Kurssi/montakurssia.js","datafiles/PhoneBook/persons.js","index.js"],"names":["baseUrl","countriesTAPI","axios","get","then","response","data","FormCountriesByString","console","log","react_default","a","createElement","Fragment","onChange","this","searchCountry","name","type","value","props","onChangeValue","React","Component","CountryRow","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","showdetail","handleClick","bind","assertThisInitialized","setState","country","responsedatalength","alpha3Code","capital","population","flag","lib_default","onClick","src","height","width","id","className","key","FilterCountriesByString","_ref","searchstring","countries","hitx","filter","obj","toUpperCase","includes","hit","hitcount","length","map","RestCountries_CountryRow","Notification","message","OkNotification","AppCountries","handleFormCountriesByString","event","target","newsearchCountry","error","noerror","_this2","setTimeout","fetchedcountries","Notification_OkNotification","components_Notification_Notification","RestCountries_FormCountriesByString","RestCountries_FilterCountriesByString","FormPersonsByString","searchPerson","PersonRow","deleteId","onPersonClick","alert","idCell0","person","idCell1","idCell2","idCell3","delbuttonId","trId","phonenumber","personsTAPI","getAllpromised","createpromised","newObject","post","updatepromised","put","concat","deletepromised","delete","FilterPersonsByString","speissi","onPersonClickDel","window","confirm","okmsg","deletedPerson","_this3","persons","PhoneBook_PersonRow","FormPersonAdd","onSubmit","ValuePerson","onChangeValuePerson","ValuePhonenumber","onChangeValuePhonenumber","AppPhoneBook","addPerson","preventDefault","newFormPerson","duplicate","find","newPerson","undefined","newPhonenumber","personObject","refreshPersons","handlePersonChange","handlePhonenumberChange","addFormPerson","newFormPhonenumber","ValueFormPerson","ValueFormPhonenumber","updPersonObject","updatePerson","handleChangeValueFormPerson","handleChangeValueFormPhonenumber","handlesearchPersonChange","newsearchPerson","handleFormPersonByString","showAll","deletePersonId","onPersonClickDelDeep","rescueaddPersonObject","_this4","catch","oldid","_this5","n","rescueaddPerson","_this6","fetchedpersons","PhoneBook_FormPersonAdd","PhoneBook_FilterPersonsByString","PhoneBook_FormPersonsByString","NoteRow","note","toggleImportance","label","important","content","notesTAPI","getAll","create","update","getAllpromisedpaskaa","request","nonExisting","date","AppNotes","addNote","noteObject","newNote","Date","new","Math","random","notes","handleNoteChange","toggleVisible","changedNote","objectSpread","notesToShow","Notes_NoteRow","Clock","timerID","setInterval","tick","clearInterval","toLocaleTimeString","scaleNames","c","f","TemperatureInput","handleChange","e","onTemperatureChange","temperature","scale","tryConvert","convert","input","parseFloat","Number","isNaN","output","round","toString","toCelsius","fahrenheit","toFahrenheit","celsius","BoilingVerdict","TemperatureCalculator","handleCelsiusChange","handleFahrenheitChange","Temperature_TemperatureInput","Temperature_BoilingVerdict","Otsikko","otsake","otsikko15","kurssi","nimi","Sisalto","osat","osa","tehtavia","Yhteensa","sumteht","reduce","sum","sumosa","Kurssi","ots","yht","Kurssit","kurssit","mappedkurssi","Kurssi_Kurssi","App","PhoneBook_AppPhoneBook","RestCountries_AppCountries","Kurssi_Kurssit","Notes_AppNotes","components_Clock_Clock","Temperature_TemperatureCalculator","halfstackkurssi","result","searchitpersons","searchitpersons2","searchitpersons3","ReactDOM","render","src_App","montakurssia","document","getElementById"],"mappings":"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","file":"static/js/main.30a9f19e.chunk.js","sourcesContent":["import axios from 'axios';\n//const baseUrl = 'http://localhost:3001/all_name_capital_population_flag_alpha3Code';    // local json-server handcrafted db.json with countries\nconst baseUrl = 'https://restcountries.eu/rest/v2/all?fields=name;capital;population;flag;alpha3Code'; //remote url\n\n\n// improved tapi's promise handled here, returns only the response.data\n/**axios\n//        .get('http://localhost:3001/all_name_capital_population_flag_alpha3Code') //https://restcountries.eu/rest/v2/all?fields=name;capital;population;flag;alpha3Code\n        .get('https://restcountries.eu/rest/v2/all?fields=name;capital;population;flag;alpha3Code')\n        .then(response => {\n          console.log('AppCountries promise fulfilled');\n          this.setState({ countries: response.data });\n        });\n */\n\nconst getAllpromised = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);     // return request.then(response => { return response.data })\n    //returns only data, look .then now handled here for the http data response and caller must handle .then for the 'pure' data\n};\n\nconst createpromised = (newObject) => {\n    const request=axios.post(baseUrl, newObject);\n    return request.then(response => response.data);     // again post has also response, .then handled here\n};\n  \n\nconst updatepromised = (id, newObject) => {\n    const request=axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n  \nconst deletepromised = (id) => {\n    const request=axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data);\n};\n\nexport default {  getAllpromised, createpromised, updatepromised, deletepromised }\n","import React from 'react';\n//https://reactjs.org/docs/components-and-props.html\n//https://reactjs.org/docs/state-and-lifecycle.html     for Class\n//https://stackoverflow.com/questions/41619166/react-can-a-child-component-send-value-back-to-parent-form/41626358\n//https://stackoverflow.com/questions/48458334/functions-are-not-valid-as-a-react-child-this-may-happen-if-you-return-a-compon\n\n// the parent is App and this is the child\n\n\nclass FormCountriesByString extends React.Component {\n\n    componentDidMount() {               // mounting, method runs after the component output has been rendered to the DOM. This is a good place to set up a timer\n        console.log('FormCountriesByString componentDidMount');\n    };\n  /**While this.props is set up by React itself and this.state has a special meaning, \n   * you are free to add additional fields to the class manually \n   * if you need to store something that doesn’t participate in the data flow (like a timer ID).\n   * \n   */\n    componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n        console.log('FormCountriesByString componentWillUnmount');\n    }; \n\n /** handler lifted too App parent\n  */   \n    \n    render() {\n      return (<>\n        <form onChange={this.searchCountry}>\n          <label><b>FormCountriesByString:</b>\n            <input\n            name=\"FormCountriesByStringInput\"\n            type=\"text\"\n            value={this.props.value}\n            onChange={this.props.onChangeValue}\n            />\n          </label>\n          <br></br>debug this.props.value: {this.props.value}\n        </form>\n        </>\n      );\n    };\n  };\nexport default FormCountriesByString;\n","import React from 'react';\nimport Image from 'react-image-resizer';\n\nclass CountryRow extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showdetail: false,\n    };\n    console.log(\"CountryRow - loading\");\n    console.log(\"CountryRow - props\", props);\n    this.handleClick= this.handleClick.bind(this);\n\n  };\n\ncomponentDidMount() {\n    console.log('CountryRow did mount');\n  };\n\ncomponentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n    console.log('CountryRow componentWillUnmount');\n  }; \n\n\n\nhandleClick() {\n    this.setState(state => ({\n      showdetail: !state.showdetail\n    }));\n    console.log('PUM',this.state.showdetail);\n  };\n\nrender() {\n//  country: this.props.country\n//  responsedatalength: this.props.responsedatalength\n  const country=this.props.country;\n  const responsedatalength=this.props.responsedatalength;\n\n  const name = <>{country.name}</>;\n  const alpha3Code = <>{country.alpha3Code}</>;\n  const capital = <><b>capital:</b> {country.capital}</>;\n  const population = <><b>population:</b> {country.population}</>;\n  const flag = <Image onClick={this.handleClick} src={country.flag} height={50} width={100}/>;\n  console.log('CountryRow render this.state.showdetail',this.state.showdetail);\n\n  if (responsedatalength===1 || this.state.showdetail===true) {\n              const detail = <div id=\"detailcountryname\" className=\"rowname\" key={country.alpha3Code} onClick={this.handleClick}>{name}\n                              <div id=\"capital\" onClick={this.handleClick}>{capital}\n                              <div id=\"population\" onClick={this.handleClick}>{population}\n                              <div id=\"alpha3\" onClick={this.handleClick}>{alpha3Code}</div>\n                              <div id=\"flag\">{flag}\n                              </div>\n                              </div>\n                              </div>\n                              </div> ;\n              return (detail);\n    } else { \n//              const row=<><li>{country.alpha3Code} <div id=\"clickmerow\" onClick={this.handleClick}>{country.name}</div></li></>;\n              const row=<div id=\"rowcountryname\" className=\"rowname\" key={country.alpha3Code} onClick={this.handleClick}>{country.name}</div>;\n              return (row);\n//              return (<div id=\"clickmerow\" onClick={this.handleClick}>{row}</div>);\n              // eslint-disable-next-line\n            };\n};\n};\nexport default CountryRow;\n","import React from 'react';\nimport CountryRow from './CountryRow';\nconsole.log(\"FilterCountriesByString.js - loading\");\n\nconst FilterCountriesByString = ({ searchstring,countries }) => {\n    console.log('FilterCountriesByString searchstring',searchstring);\n    const hitx=countries.filter(obj => {return obj.name.toUpperCase().includes('Å') });\n    console.log(hitx);\n  \n    const hit=countries.filter(obj => {return obj.name.toUpperCase().includes(searchstring) });\n    const hitcount = hit.length;\n    console.log('FCBS searchstring:',searchstring,'and hitcount as hit.length',hitcount);\n//    console.log('FCBS countries',countries);\n    if (hitcount < 11) {\n    return (<><b>FilterCountriesByString (click on country/flag... to toggle details!):\n             </b>{searchstring}\n             {hit.map(country=><CountryRow\n                      key={country.alpha3Code} \n                      country={country} \n                      responsedatalength={hitcount}/>)}\n                      </>);\n    } else {\n    return (<p>too many rows, refine search</p>);\n    // eslint-disable-next-line\n    };\n  };\n  \nexport default FilterCountriesByString;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    );\n  };  \n  export default Notification;\n","import React from 'react';\n\nconst OkNotification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n    return (\n      <div className=\"noerror\">\n        {message}\n      </div>\n    );\n  };  \n  export default OkNotification;\n","import React from 'react';\nimport countriesTAPI from './services/countriesTAPI';\nimport FormCountriesByString from './FormCountriesByString';\nimport FilterCountriesByString from './FilterCountriesByString';\nimport Notification from '../Notification/Notification';    //notifications\nimport OkNotification from '../Notification/OkNotification';    //notifications\n\n\n\nclass AppCountries extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        countries: [],\n        newsearchCountry: '',\n        value: '',\n        responsedatalength: '',\n        error:null,\n        noerror:null\n      };\n      console.log('AppCountries constructor');\n      this.handleFormCountriesByString = this.handleFormCountriesByString.bind(this);\n    };\n  \n  componentDidMount() {\n      console.log('AppCountries did mount');\n                    /**      axios\n                    //        .get('http://localhost:3001/all_name_capital_population_flag_alpha3Code') //https://restcountries.eu/rest/v2/all?fields=name;capital;population;flag;alpha3Code\n                            .get('https://restcountries.eu/rest/v2/all?fields=name;capital;population;flag;alpha3Code')\n                            .then(response => {\n                              console.log('AppCountries promise fulfilled');\n                              this.setState({ countries: response.data });\n                            });\n                            */\n        countriesTAPI\n        .getAllpromised()\n        .then(response => {\n          this.setState({\n            countries: response,\n            noerror: 'countriesTAPI getAllpromised gets countries to you!'\n          });\n          setTimeout(() => {\n            this.setState({noerror: null})\n          }, 5000)\n        });\n\n    };\n \n  componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n      console.log('AppCountries componentWillUnmount');\n    }; \n\n  handleFormCountriesByString = (event) => {\n    console.log(event.target.value);\n    //alert('handleFormCountriesByString event.target.value: ' + event.target.value);\n    this.setState({\n      value: event.target.value.toUpperCase(),\n      newsearchCountry: event.target.value.toUpperCase()\n    });\n  };\n\n\n  render() {\n    console.log('AppCountries render');\n    const fetchedcountries = this.state.countries;\n    const  responsedatalength = this.state.countries.length; \n    console.log('AppCountries render responsedatalength',responsedatalength);\n    //const haemut='Å';\n    //const haemut='A';\n\n    console.log('AppCountries fetchedcountries',fetchedcountries)\n    return (<div id=\"AppCountries\"><h4>AppCountries for HW2.13</h4>\n        <p>uses axios to fetch countries from restcountries.eu</p>\n        <p>components: FilterCountriesByString, FormCountriesByString</p>\n        <OkNotification message={this.state.noerror}/>\n        <Notification message={this.state.error}/>\n        <FormCountriesByString value={this.state.value} onChangeValue={this.handleFormCountriesByString} />\n        <div id=\"FilterCountriesByString\"><FilterCountriesByString searchstring={this.state.newsearchCountry} countries={this.state.countries}/>\n        </div>\n        </div>\n        );\n    };\n  };\n\nexport default AppCountries;\n","import React from 'react';\n//https://reactjs.org/docs/components-and-props.html\n//https://reactjs.org/docs/state-and-lifecycle.html     for Class\n//https://stackoverflow.com/questions/41619166/react-can-a-child-component-send-value-back-to-parent-form/41626358\n//https://stackoverflow.com/questions/48458334/functions-are-not-valid-as-a-react-child-this-may-happen-if-you-return-a-compon\n\n// the parent is App and this is the child\n\n\nclass FormPersonsByString extends React.Component {\n\n    componentDidMount() {               // mounting, method runs after the component output has been rendered to the DOM. This is a good place to set up a timer\n        console.log('FormPersonsByString componentDidMount');\n    };\n  /**While this.props is set up by React itself and this.state has a special meaning, \n   * you are free to add additional fields to the class manually \n   * if you need to store something that doesn’t participate in the data flow (like a timer ID).\n   * \n   */\n    componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n        console.log('FormPersonsByString componentWillUnmount');\n    }; \n\n /** handler lifted too App parent\n  */   \n    \n    render() {\n      return (<>\n        <form onChange={this.searchPerson}>\n          <label><b>FormPersonsByString:</b>\n            <input\n            name=\"FormPersonsByStringInput\"\n            type=\"text\"\n            value={this.props.value}\n            onChange={this.props.onChangeValue}\n            />\n          </label>\n          <br></br>debug this.props.value: {this.props.value}\n        </form>\n        </>\n      );\n    };\n  };\nexport default FormPersonsByString;\n// tää on killeri           debug this.props.onChangeValue: {this.props.onChangeValue}\n// thanx for finding that this causes the warning to mr. Joona in telegram..\n// jos se häiritsee ni pistä vaik {`${onChangeValue}`} eli käytännös pistät sen stringiks\n//const newHOCFormPersonsByString =   // do we need to do Higher order components to get rid of warnings?\n/**Warning: Functions are not valid as a React child. \n * This may happen if you return a Component instead of <Component /> from render. \n * Or maybe you meant to call this function rather than return it.\n * \n */\n","import React from 'react';\n\n\nclass PersonRow extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      deleteId: null\n    };\n    console.log('PersonRow constructor');\n    this.onPersonClick = this.onPersonClick.bind(this);\n  };\n\n  componentDidMount() {               // mounting, method runs after the component output has been rendered to the DOM. This is a good place to set up a timer\n      console.log('PersonRow componentDidMount');\n      console.log('PersonRow props',this.props);\n  };\n/**While this.props is set up by React itself and this.state has a special meaning, \n * you are free to add additional fields to the class manually \n * if you need to store something that doesn’t participate in the data flow (like a timer ID).\n * \n */\n  componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n      console.log('PersonRow componentWillUnmount');\n  }; \n\n  onPersonClick(id) {\n \n    alert(\"PersonRow onPersonClick for this.props.person.id \"+id);\n    console.log(\"this.onPersonClick\",id);\n  };\n\n  render() {\n\n    const idCell0 = \"cell-\"+this.props.person.id+\"-\"+0;\n    const idCell1 = \"cell-\"+this.props.person.id+\"-\"+1;\n    const idCell2 = \"cell-\"+this.props.person.id+\"-\"+2;\n    const idCell3 = \"cell-\"+this.props.person.id+\"-\"+3;\n    const delbuttonId = \"persondelbutton\"+this.props.person.id;\n\n    const trId = \"personrowxxx\"+this.props.person.id;\n\n    const content= <>\n                              <tr id={trId} key={trId}>\n                                <td id={idCell0} key={idCell0}>{this.props.person.id}</td>\n                                <td id={idCell1} key={idCell1}>{this.props.person.phonenumber}</td>\n                                <td id={idCell2} key={idCell2}>{this.props.person.name}</td>\n                                <td id={idCell3} key={idCell3}><button id={delbuttonId} \n                                                                       key={delbuttonId}\n                                                                       type=\"submit\" \n                                                                       className=\"button button3\"\n                                                                       onClick={() => this.props.onPersonClick(this.props.person.id)}>\n                                                          del\n                                                  </button>\n                                                  </td>\n                              </tr>\n                  </>;\n\nreturn (\n    content\n    );\n  };\n};\n\nexport default PersonRow;\n","import axios from 'axios';\n//const baseUrl = 'https://mysterious-fjord-82967.herokuapp.com/api/persons'; //FIXME hw3.11\nconst baseUrl = '/api/persons';  //FIXME hw3.11 relative url used in static file access in backends build-dir\n//const baseUrl = 'http://localhost:3001/api/persons';  //FIXME hw3.9\n//const baseUrl = 'http://localhost:3001/persons';\n\n// improved tapi's promise handled here, returns only the response.data\n\nconst getAllpromised = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);     // return request.then(response => { return response.data })\n    //returns only data, look .then now handled here for the http data response and caller must handle .then for the 'pure' data\n};\n\nconst createpromised = (newObject) => {\n    const request=axios.post(baseUrl, newObject);\n    return request.then(response => response.data);     // again post has also response, .then handled here\n};\n  \n\nconst updatepromised = (id, newObject) => {\n    const request=axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n  \nconst deletepromised = (id) => {\n    const request=axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data);\n};\n\nexport default {  getAllpromised, createpromised, updatepromised, deletepromised }\n","import React from 'react';\nimport PersonRow from './PersonRow';\nimport personsTAPI from './services/personsTAPI';\nimport Notification from '../Notification/Notification';    //notifications\nimport OkNotification from '../Notification/OkNotification';    //notifications\n\nconsole.log(\"FilterPersonsByString.js - loading\");\n\n\nclass FilterPersonsByString extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      deleteId: null,\n      noerror: null,\n      error: null,\n      speissi: '\\u00A0'\n    };\n    console.log('PersonRow constructor');\n    this.onPersonClickDel = this.onPersonClickDel.bind(this);\n  };\n\n  componentDidMount() {               // mounting, method runs after the component output has been rendered to the DOM. This is a good place to set up a timer\n      console.log('PersonRow componentDidMount');\n      console.log('PersonRow props',this.props);\n  };\n/**While this.props is set up by React itself and this.state has a special meaning, \n * you are free to add additional fields to the class manually \n * if you need to store something that doesn’t participate in the data flow (like a timer ID).\n * \n */\n  componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n      console.log('PersonRow componentWillUnmount');\n  }; \n\n  onPersonClickDel(id,name) {\n    if (window.confirm(\"Do you really want to delete this person.id: \"+id)) { \n        const okmsg = \"Deleted:\"+this.state.speissi+name;\n//      window.open(\"exit.html\", \"Thanks for Visiting!\");\n//        alert(\"FPBS onPersonClickDel for id \"+this.state.speissi+id+this.state.speissi+\"name:\"+this.state.speissi+name);\n        console.log(\"FPBS onPersonClickDel for id \",id,\"name:\",name);\n        personsTAPI\n            .deletepromised(id)\n            .then(deletedPerson => {\n//                alert(\"deletePromised\"+id);\n                this.props.onPersonClickDel(id);\n                this.setState({\n                    noerror: okmsg\n                });\n                setTimeout(() => {\n                  this.setState({noerror: null})\n                }, 5000);              });\n\n      };\n    };\n\n  render() {\n    var hit=[];\n    if (this.props.searchstring!==null) {\n      hit=this.props.persons.filter(obj => {return obj.name.toUpperCase().includes(this.props.searchstring) });\n    } else {\n      hit=this.props.persons;\n    };\n    console.log('FPBS searchstring',this.props.searchstring);\n    console.log('FPBS persons',this.props.persons);\n    console.log('FPBS hit',hit);\n    const idth0 = \"FPBS-TH-0\";\n    const idth1 = \"FPBS-TH-1\";\n    const idth2 = \"FPBS-TH-2\";\n    const idth3 = \"FPBS-TH-3\";\n\n    const content =<><br></br><b>FilterPersonsByString:</b>{this.props.searchstring} \n                    <OkNotification message={this.state.noerror}/>\n                    <Notification message={this.state.error}/>\n\n                    <table id=\"filterpersontable\" key=\"filterpersontable\">\n                    <tbody id=\"filterpersontbody\" key=\"filterpersontbody\">\n                      <tr id=\"filterpersontableheader\" key=\"filterpersontableheader\">\n                         <th id={idth0} key={idth0}>person.id</th>\n                         <th id={idth1} key={idth1}>phonenumber</th>\n                         <th id={idth2} key={idth2}>name</th>\n                         <th id={idth3} key={idth3}>buttons</th>\n                      </tr>\n                      {hit.map(person=><PersonRow\n                         key={person.id}\n                         person={person}\n                         onPersonClick={() => this.onPersonClickDel(person.id,person.name)}/>)}\n                      </tbody>\n                    </table>\n                    </>;\n    return (content);\n  };\n};\n\nexport default FilterPersonsByString;\n","import React from 'react';\n//https://reactjs.org/docs/components-and-props.html\n//https://reactjs.org/docs/state-and-lifecycle.html     for Class\n//https://stackoverflow.com/questions/41619166/react-can-a-child-component-send-value-back-to-parent-form/41626358\n//https://stackoverflow.com/questions/48458334/functions-are-not-valid-as-a-react-child-this-may-happen-if-you-return-a-compon\n\n// the parent is App and this is the child\n\n\nclass FormPersonAdd extends React.Component {\n\n    componentDidMount() {               // mounting, method runs after the component output has been rendered to the DOM. This is a good place to set up a timer\n        console.log('FormPersonAdd componentDidMount');\n    };\n  /**While this.props is set up by React itself and this.state has a special meaning, \n   * you are free to add additional fields to the class manually \n   * if you need to store something that doesn’t participate in the data flow (like a timer ID).\n   * \n   */\n    componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n        console.log('FormPersonAdd componentWillUnmount');\n    }; \n\n /** handler lifted too App parent\n  */   \n    //type=\"text\"\n    render() {\n      return (<><h3>FormPersonAdd</h3>\n        <form onSubmit={this.props.onSubmit}>\n          <label>name: \n          <input\n            name=\"addPersonInput\"\n            type=\"text\"\n            value={this.props.ValuePerson} \n            onChange={this.props.onChangeValuePerson}\n          />\n          </label><p>\n          <label>phonenumber: \n          <input\n            name=\"addPhonenumberInput\"\n            type=\"text\"\n            value={this.props.ValuePhonenumber} \n            onChange={this.props.onChangeValuePhonenumber}\n          />\n          </label></p>\n          <button type=\"submit\">FormPersonAdd tallenna person</button>\n        </form>\n        </>\n      );\n    };\n  };\nexport default FormPersonAdd;\n","import React from 'react';\nimport FormPersonsByString from './FormPersonsByString';\nimport FilterPersonsByString from './FilterPersonsByString';\nimport FormPersonAdd from './FormPersonAdd';\nimport personsTAPI from './services/personsTAPI';\nimport Notification from '../Notification/Notification';    //notifications\nimport OkNotification from '../Notification/OkNotification';    //notifications\n\n\nclass AppPhoneBook extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        showAll: true,\n        persons: [],\n        newPerson: '',\n        newPhonenumber: '',\n        newFormPerson: '',\n        newFormPhonenumber: '',\n\n        newsearchPerson: '',\n        value: '',\n        deletePersonId:'',\n        error:null,\n        noerror:null,\n        speissi: '\\u00A0'\n      };\n      console.log('AppPhoneBook constructor');\n      this.addPerson = this.addPerson.bind(this);\n      this.handlePersonChange = this.handlePersonChange.bind(this);\n      this.handlesearchPersonChange = this.handlesearchPersonChange.bind(this);\n      this.handleFormPersonByString = this.handleFormPersonByString.bind(this);\n      this.handleChangeValueFormPerson = this.handleChangeValueFormPerson.bind(this);\n      this.handleChangeValueFormPhonenumber = this.handleChangeValueFormPhonenumber.bind(this);\n      this.onPersonClickDelDeep = this.onPersonClickDelDeep.bind(this);\n\n    };\n  \n  componentDidMount() {\n      console.log('AppPhoneBook did mount');\n                  /**      axios\n                          .get('http://localhost:3001/persons')\n                          .then(response => {\n                            console.log('AppPhoneBook promise fulfilled');\n                            this.setState({ persons: response.data });\n                          });\n                          */\n      personsTAPI\n        .getAllpromised()\n        .then(response => {\n          this.setState({\n            persons: response,\n            noerror: 'personsTAPI getAllpromised gets persons to you!'\n          });\n          setTimeout(() => {\n            this.setState({noerror: null})\n          }, 5000)\n        });\n    };\n \n  refreshPersons() {\n      console.log('AppPhoneBook.js refreshPersons');\n      this.setState({persons: []});\n\n      personsTAPI\n        .getAllpromised()\n        .then(response => {\n          this.setState({\n            persons: response\n          });\n        });\n    };\n \n\n  componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n      console.log('AppPhoneBook componentWillUnmount');\n    }; \n\n  addPerson = (event) => {\n    event.preventDefault();\n    const okmsg=\"Added:\"+ this.state.speissi+this.state.newFormPerson;\n    const duplicate = this.state.persons.find(person => person.name === this.state.newPerson);\n    if (duplicate===undefined) {\n      console.log(duplicate);\n      alert('addPerson submitted:'+this.state.speissi + this.state.newPerson+this.state.speissi + 'with phonenumber'+this.state.speissi + this.state.newPhonenumber);\n      const personObject = {\n        name: this.state.newPerson,\n        phonenumber: this.state.newPhonenumber\n//        id: this.state.persons.length + 1\n      };\n      personsTAPI\n      .createpromised(personObject)\n      .then(newPerson => {\n        this.setState({\n//          persons: this.state.persons.concat(personObject),   //FIXME ei toimi json-serverin luoma id puuttuu\n          newPerson: '',\n          newPhonenumber: '',\n          noerror: okmsg\n        });\n        this.refreshPersons();\n        setTimeout(() => {\n          this.setState({noerror: null})\n        }, 5000);\n      });\n//      const persons = this.state.persons.concat(personObject);\n  \n//      this.setState({\n//        persons: persons,\n//        newPerson: '',\n//        newPhonenumber: ''\n//      });\n      } else {\n      //alert('duplicate check: ' +this.state.newPerson +\" is duplicate \" + duplicate); \n    };\n\n  };\n\n  handlePersonChange = (event) => {\n    console.log(event.target.value);\n    this.setState({ newPerson: event.target.value });\n  };\n\n\n  handlePhonenumberChange = (event) => {\n    console.log(event.target.value);\n    this.setState({ newPhonenumber: event.target.value });\n  };\n\n  rescueaddPerson(rescueaddPersonObject) {\n    const okmsg=\"Rescue added person:\"+ this.state.speissi+rescueaddPersonObject.name;\n    personsTAPI\n    .createpromised(rescueaddPersonObject)\n    .then(rescueaddPersonObject => {\n      this.setState({\n  //          persons: this.state.persons.concat(personObject), //FIXME returning id uupuu?\n        newFormPerson: '',\n        newFormPhonenumber: '',\n        ValueFormPerson: '',\n        ValueFormPhonenumber:'',\n        noerror: okmsg\n      });\n      console.log(\"rescueaddPerson succeeded\");\n      setTimeout(() => {\n        this.setState({noerror: null})\n      }, 5000);\n      this.refreshPersons();\n    })\n    .catch(error => {\n      alert(\"ERROR serveri huone on tulessa korjaa json-server\");\n      this.setState({\n        error: `ERROR serveri huone on tulessa korjaa json-server`\n      })\n      setTimeout(() => {\n        this.setState({error: null})\n      }, 5000)\n    });\n  };\n\n\n  addFormPerson = (event) => {\n    event.preventDefault();\n    \n    const okmsg=\"Added:\"+ this.state.speissi+this.state.newFormPerson;\n    alert('addFormPerson submitted:' + this.state.speissi+ this.state.newFormPerson + this.state.speissi+'with phonenumber:'+this.state.speissi+ this.state.newFormPhonenumber);\n    const duplicate = this.state.persons.find(person => person.name === this.state.newFormPerson);\n    if (duplicate===undefined) {\n      console.log(duplicate);\n      const personObject = {\n        name: this.state.newFormPerson,\n        phonenumber: this.state.newFormPhonenumber,\n//        id: this.state.persons.length + 1\n      }; \n      personsTAPI\n      .createpromised(personObject)\n      .then(newPerson => {\n        this.setState({\n//          persons: this.state.persons.concat(personObject), //FIXME returning id uupuu?\n          newFormPerson: '',\n          newFormPhonenumber: '',\n          ValueFormPerson: '',\n          ValueFormPhonenumber:'',\n          noerror: okmsg\n        });\n        console.log(\"addFormPerson added via TAPI\");\n        setTimeout(() => {\n          this.setState({noerror: null})\n        }, 5000);\n        this.refreshPersons();\n      });\n//      const persons = this.state.persons.concat(personObject);\n//  \n//      this.setState({\n//        persons: persons,\n//        newFormPerson: '',\n//        newFormPhonenumber: '',\n//        ValueFormPerson: '',\n//        ValueFormPhonenumber:''\n//      });\n    } else {\n//      alert('duplicate check: ' +this.state.newFormPerson +\" is duplicate \" + duplicate); \n      alert('duplicate.name:'       +this.state.speissi+duplicate.name+this.state.speissi\n           +'duplicate.id:'         +this.state.speissi+duplicate.id  +this.state.speissi\n           +'duplicate.phonenumber:'+this.state.speissi+duplicate.phonenumber);\n      if (window.confirm(duplicate.name+this.state.speissi+\"Is already in Phonebook, do you want to update the phonenumber?\")) {\n        const updPersonObject = {\n          name: this.state.newFormPerson,\n          phonenumber: this.state.newFormPhonenumber\n        };\n        this.updatePerson(duplicate.id,updPersonObject);\n      }; \n    };\n  };\n\n  updatePerson(oldid,updPersonObject) {\n  const okmsg=\"Updated:\"+ this.state.speissi+updPersonObject.name;\n  personsTAPI\n  .updatepromised(oldid,updPersonObject)\n  .then(updPersonObject => {\n    this.setState({\n//          persons: this.state.persons.concat(personObject), //FIXME returning id uupuu?\n      newFormPerson: '',\n      newFormPhonenumber: '',\n      ValueFormPerson: '',\n      ValueFormPhonenumber:'',\n      noerror: okmsg\n    });\n    console.log(\"updatePerson done\");\n    setTimeout(() => {\n      this.setState({noerror: null})\n    }, 5000);\n    this.refreshPersons();\n    })\n  .catch(error => {\n      alert(\"ERROR person.id was deleted by THE FASTEST HAND IN THE INTERNET from our json-server\"+this.state.speissi+oldid);\n      this.setState({\n        error: `person.id '${oldid}' is no more on json-server`,\n        persons: this.state.persons.filter(n => n.id !== oldid)\n      })\n      setTimeout(() => {\n        this.setState({error: null})\n      }, 5000)\n      if (window.confirm(\"Do you want to fix the json-server by adding Person back\"+this.state.speissi+updPersonObject.name)) { \n        const rescueaddPersonObject = {\n//          id: oldid,\n          name: updPersonObject.name,\n          phonenumber: updPersonObject.phonenumber\n        };\n        this.rescueaddPerson(rescueaddPersonObject);\n      };\n    });\n  };\n\n\n  handleChangeValueFormPerson = (event) => {\n    console.log('hCVFormP',event.target.value);\n    this.setState({ newFormPerson: event.target.value });\n  };\n  handleChangeValueFormPhonenumber = (event) => {\n    console.log('hCVFormPn',event.target.value);\n    this.setState({ newFormPhonenumber: event.target.value });\n  };\n\n\n  handlesearchPersonChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      value: event.target.value.toUpperCase(),\n      newsearchPerson: event.target.value.toUpperCase()\n    });\n\n  };\n\n  handleFormPersonByString = (event) => {\n    console.log(event.target.value);\n    //alert('handleFormPersonByString event.target.value: ' + event.target.value);\n    this.setState({\n      value: event.target.value.toUpperCase(),\n      newsearchPerson: event.target.value.toUpperCase()\n    });\n  };\n\n\n  // conditional chains type, but only one row\n  //  of ternary https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\n  // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness\n  // the difference of == and ===\n  onPersonClickDelDeep() {\n \n    alert(\"AppPhoneBook onPersonClickDelDeep \");\n    console.log(\"this.onPersonClickDelDeep\");\n  };\n\n  render() {\n    console.log('AppPhoneBook render');\n    const fetchedpersons = this.state.persons;\n\n    console.log('AppPhoneBook fetchedpersons',fetchedpersons)\n    return (<div id=\"AppPhoneBook\"><h4>AppPhoneBook for HW2.14</h4>\n        <OkNotification message={this.state.noerror}/>\n        <Notification message={this.state.error}/>\n        <p>uses axios: adding persons,duplicate prevention,phonenumbers and search</p>\n        <p>components: AllPersons, FilterPersonsByName, FilterPersonsByString, FormPersonAdd</p>\n        <b>Create new phonebook entry or change phonenumber for existing person</b>\n        <FormPersonAdd ValuePerson={this.state.newFormPerson} \n                       onChangeValuePerson={this.handleChangeValueFormPerson}\n                       ValuePhonenumber={this.state.newFormPhonenumber}\n                       onChangeValuePhonenumber={this.handleChangeValueFormPhonenumber}\n                       onSubmit={this.addFormPerson} />\n\n        <div id=\"FilterPersonsByString\"><FilterPersonsByString \n                                                    searchstring={this.state.newsearchPerson}\n                                                    persons={this.state.persons}\n                                                    onPersonClickDel={() => this.refreshPersons()}/>\n        <FormPersonsByString value={this.state.value} onChangeValue={this.handleFormPersonByString} />\n\n\n        <form onChange={this.searchPerson}>\n          <label>search:\n            <input\n            name=\"searchPersonInput\"\n            type=\"text\"\n            value={this.state.newsearchPerson}\n            onChange={this.handlesearchPersonChange}\n            />\n          </label>\n          debug: {this.state.newsearchPerson}\n        </form><h3>Person-form in AppPhoneBook</h3>\n        <form onSubmit={this.addPerson}>\n          <label>name: \n          <input\n            name=\"addPersonInput\"\n            type=\"text\"\n            value={this.state.newPerson} \n            onChange={this.handlePersonChange}\n          />\n          </label><p>\n          <label>phonenumber: \n          <input\n            name=\"addPhonenumberInput\"\n            type=\"text\"\n            value={this.state.newPhonenumber} \n            onChange={this.handlePhonenumberChange}\n          />\n          </label></p>\n          <button type=\"submit\">tallenna person</button>\n        </form>\n        debug: {this.state.newPerson}\n\n        </div>\n        </div>\n        );\n    };\n  };\n\nexport default AppPhoneBook;\n\n/**\n * \n        <div id=\"FormPersonsByString\"><h1>FORM FormPersonsByString</h1>\n        <FormPersonsByString value={this.state.value} onChangeValue={this.handleFormPersonByString} />\n\n                </div>\n\n                        <div id=\"searchedpersonsincludes\"><h2>Searched persons, string includes</h2>\n            {searchitpersons3.map(person=><PersonRow key={person.id} person={person}/>)}\n        <div id=\"searchedpersonsexact\"><h2>Searched persons, exact match</h2>\n            {searchitpersons.map(person=><PersonRow key={person.id} person={person}/>)}\n        <div id=\"persons\"><h2>All persons</h2>\n            {this.state.persons.map(person=><PersonRow key={person.id} person={person}/>)}\n\n        <p><b>AppPhoneBook.PersonsRow:</b>{fetchedpersons.map(person=><PersonRow \n                                                                        key={person.id}\n                                                                        person={person}\n                                                                        deletePerson={this.deletePerson(person.id)} />)}</p>\n\n */\n/**\n * \n *         <div id=\"AllPersons\"><AllPersons persons={this.state.persons}/>\n        <div id=\"FilterPersonsByName\"><FilterPersonsByName searchstring={this.state.newsearchPerson} persons={this.state.persons}/>\n        </div>\n        </div>\n\n */","import React from 'react';\n\nconst NoteRow = ({ note, toggleImportance }) => {\n  const label=note.important ? 'make not important' : 'make important';\n  return (\n    <li className=\"note\">>{note.content} <button onClick={toggleImportance}>{label}</button></li>\n  );\n};\n\nexport default NoteRow;\n","import axios from 'axios';\n//const baseUrl = 'http://localhost:3001/notes';\n//const baseUrl = 'https://mysterious-fjord-82967.herokuapp.com/notes'; //FIXME hw3.11\nconst baseUrl = '/notes'; //FIXME hw3.11 relative url used in static file access in backends build-dir\n\n// vanilla approach, returns promised which must be handled by the caller\nconst getAll = () => {\n  return axios.get(baseUrl);                    // returns response from the http get, ugly but works, .then in caller\n};\n\nconst create = (newObject) => {\n    return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\n// improved tapi's promise handled here, returns only the response.data\n\nconst getAllpromised = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);     // return request.then(response => { return response.data })\n    //returns only data, look .then now handled here for the http data response and caller must handle .then for the 'pure' data\n};\n\nconst getAllpromisedpaskaa = () => {                            // use to test that .catch works in toggleImportance  (cant toggle non-existent!)\n    const request=axios.get(baseUrl);\n        const nonExisting = {\n          id: 10000,\n          content: 'Tätä muistiinpanoa ei ole palvelimelta CLICKKAAMUA!!',\n          date: '2017-12-10T17:30:31.098Z',\n          important: true\n        };\n        return request.then(response => response.data.concat(nonExisting))\n      };\n      \n\nconst createpromised = (newObject) => {\n    const request=axios.post(baseUrl, newObject);\n    return request.then(response => response.data);     // again post has also response, .then handled here\n};\n  \n\nconst updatepromised = (id, newObject) => {\n    const request=axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n  \n\nexport default { getAll, create, update, getAllpromised, createpromised, updatepromised, getAllpromisedpaskaa }\n","import React from 'react';\n//import axios from 'axios';\nimport NoteRow from './NoteRow';\nimport notesTAPI from './services/notesTAPI';      // in lecture material this was refactored to ~/services/notes.js\nimport Notification from '../Notification/Notification';    //notifications\n\nclass AppNotes extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        notes: [],\n        newNote: '',\n        showAll: true,\n        error: null  //'catched that something went wrong..'\n      };\n      console.log('AppNotes constructor');\n      this.toggleVisible = this.toggleVisible.bind(this);\n      this.addNote = this.addNote.bind(this);\n      this.handleNoteChange= this.handleNoteChange.bind(this);\n    };\n  \n  componentDidMount() {\n      console.log('AppNotes did mount');\n      /** prior notesTAPI.js\n      axios\n        .get('http://localhost:3001/notes')\n        .then(response => {\n          console.log('AppNotes promise fulfilled');\n          this.setState({ notes: response.data });\n        });\n      */\n        /** notesTAPI vanillas, then must handled here\n      notesTAPI                        //summoned in notesTAPI.js\n        .getAll()\n        .then(response => {\n          this.setState({\n            notes: response.data        // response from http get\n          })\n        });\n       */\n      notesTAPI   //FIXME this getAllpromisedpaskaa() is not for prod. it breaks the app\n//        .getAllpromised()           // ok function\n        .getAllpromisedpaskaa()       // to test .catch in end of promise-chain see toggleImportance\n        .then(response => {\n          this.setState({\n            notes: response\n          })\n      });\n    };\n \n  componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n      console.log('AppNotes componentWillUnmount');\n    }; \n\n  addNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n          content: this.state.newNote,\n          date: new Date().new,\n          important: Math.random() > 0.5,         // 50% chance to get true or false\n          id: this.state.notes.length + 1\n        };\n\n        // adds note to notes - jsonserver handles post\n        /** prior notesTAPI.js \n        axios.post('http://localhost:3001/notes', noteObject)\n        .then(response => {\n          console.log(response);\n          this.setState({\n            notes: this.state.notes.concat(response.data),\n            newNote: ''\n          })\n        });\n         */\n        /**\n        notesTAPI\n          .create(noteObject)\n          .then(response => {\n            this.setState({\n              notes: this.state.notes.concat(response.data),\n              newNote: ''\n            })\n          });\n         */\n\n        notesTAPI\n          .createpromised(noteObject)\n          .then(newNote => {\n            this.setState({\n              notes: this.state.notes.concat(newNote),\n              newNote: ''\n            })\n          });\n        /** OBSOLETED WITH AXIOS POST        const notes = this.state.notes.concat(noteObject);\n                this.setState({\n                  notes,\n                  newNote: ''\n        });\n         */\n      };\n    \n      handleNoteChange = (event) => {\n        console.log(event.target.value);\n        this.setState({ newNote: event.target.value });\n      };\n      \n      toggleVisible = () => {\n        this.setState({ showAll: !this.state.showAll });   // toggles the true to false to true\n      };\n    \n      toggleImportance = (id) => {\n          return () => {\n          //FIXME es6 template string doesnt work: console.log('importance of ${id} needs to be toggled');\n            console.log('importance of '+id+' needs to be toggled');\n          //FIXME ei toimi  const url='http://localhost:3001/notes/${id}';            // note specific unique url\n            // notesTAPI.js <-- const url='http://localhost:3001/notes/'+id;\n            const note=this.state.notes.find(n=>n.id===id);           // get id reference (to note) for the to be changed note\n            const changedNote={ ...note, important: !note.important }; // object spread https://github.com/tc39/proposal-object-rest-spread\n            /**\n             * Käytännössä {...note} luo olion, jolla on kenttinään kopiot olion note kenttien arvoista. \n             * Kun aaltosulkeisiin lisätään asioita, esim. { ...note, important: true }, \n             * tulee uuden olion kenttä important saamaan arvon true. \n             * Eli esimerkissämme important saa uudessa oliossa vanhan arvonsa käänteisarvon.\n             * Kannattaa myös huomata, että uusi olio changedNote on ainoastaan ns shallow copy,  https://en.wikipedia.org/wiki/Object_copying#Shallow_copy\n             * eli uuden olion kenttien arvoina on vanhan olion kenttien arvot. \n             * Jos vanhan olion kentät olisivat itsessään olioita, \n             * viittaisivat uuden olion kentät samoihin olioihin.\n             * \n             *  Koska tilaa ei Reactissa saa muuttaa suoraan!\n             */\n            /** prior notesTAPI.jos \n            axios\n              .put(url, changedNote)\n              .then(response => {\n                this.setState({\n                  notes: this.state.notes.map(note=>note.id!==id ? note:response.data)\n                })\n              });\n            */\n           /**\n            notesTAPI\n              .update(id, changedNote)\n              .then(response => {\n                this.setState({\n                  notes: this.state.notes.map(note=>note.id!==id ? note:response.data)\n                })\n              });\n             */\n            notesTAPI\n              .updatepromised(id, changedNote)\n              .then(changedNote => {\n                const notes = this.state.notes.filter(n => n.id !== id)\n                this.setState({\n                  notes: notes.concat(changedNote)\n                })\n              })\n//              .catch(error => {\n//                alert(`muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`)\n//                this.setState({ notes: this.state.notes.filter(n => n.id !== id) })\n//              });  //promise-chain ends here, so .catch is here too\n\n              .catch(error => {\n                this.setState({\n                  error: `muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`,\n                  notes: this.state.notes.filter(n => n.id !== id)\n                })\n                setTimeout(() => {\n                  this.setState({error: null})\n                }, 5000)\n              });\n\n              /**\n               * Uusi muistiinpano lähetetään sitten PUT-pyynnön mukana palvelimelle, jossa se korvaa aiemman muistiinpanon.\n               * Takaisinkutsufunktiossa asetetaan komponentin App tilaan kaikki vanhat muistiinpanot \n               * paitsi MUUTTUNEEN, josta tilaan asetetaan PALVELIMEN PALAUTTAMA versio:\n               * Tämä saadaan aikaan metodilla map joka siis luo uuden taulukon vanhan taulukon perusteella. \n               * Jokainen uuden taulukon alkio luodaan ehdollisesti siten, että \n               * jos ehto note.id !== id on tosi, otetaan uuteen taulukkoon suoraan vanhan taulukon kyseinen alkio. \n               * Jos ehto on epätosi, eli kyseessä on muutettu muistiinpano, otetaan uuteen taulukkoon palvelimen palauttama olio.\n               * \n               */\n          };\n          /**Eli komponentin App metodi toggleImportanceOf ei itsessään ole tapahtumankäsittelijä, \n           * vaan tehdas, jonka avulla kullekin muistiinpanolle luodaan oma tapahtumankäsittelijä.\n           * Yksittäistä json-serverillä olevaa muistiinpanoa voi muuttaa kahdella tavalla, \n           * joko korvaamalla sen tekemällä HTTP PUT -pyyntö muistiinpanon yksilöivään osoitteeseen \n           * tai muuttamalla ainoastaan joidenkin muistiinpanon kenttien arvoja HTTP PATCH -pyynnöllä.\n           * \n           */\n      };\n    \n  render() {\n    console.log('AppNotes render');\n    const notesToShow =             // ternary operator, if showAll===false then filter\n    this.state.showAll ?\n      this.state.notes :\n      this.state.notes.filter(note => note.important === true) ;         // render only important===true\n\n  const label = this.state.showAll ? 'vain tärkeät' : 'kaikki';\n\n\n    return (\n        <React.Fragment>\n        <h1>AppNotes</h1>using notesTAPI to get,put,post to json-server\n          <button onClick={this.toggleVisible}>\n            näytä {label}\n          </button>\n        <ul>\n          {notesToShow.map(note => <NoteRow \n                                        key={note.id}\n                                        note={note}\n                                        toggleImportance={this.toggleImportance(note.id)} />)}\n        </ul>\n        <Notification message={this.state.error}/>\n        <form onSubmit={this.addNote}>\n          <input\n            name=\"addNoteInput\"\n            type=\"text\"\n            value={this.state.newNote} \n            onChange={this.handleNoteChange}\n          />\n          <button type=\"submit\">tallenna</button>\n        </form>\n        </React.Fragment>\n        );\n    };\n  };\n\nexport default AppNotes;\n\n","import React from 'react';\n//https://reactjs.org/docs/components-and-props.html\n//https://reactjs.org/docs/state-and-lifecycle.html     for Class\n\nclass Clock extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {date: new Date()};          //FIXME note instead of using this.props.date we handle now the state locally in the Class\n    };\n\n    componentDidMount() {               // mounting, method runs after the component output has been rendered to the DOM. This is a good place to set up a timer\n        console.log('Clock componentDidMount');\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n          );\n    };\n  /**While this.props is set up by React itself and this.state has a special meaning, \n   * you are free to add additional fields to the class manually \n   * if you need to store something that doesn’t participate in the data flow (like a timer ID).\n   * \n   */\n    componentWillUnmount() {            // unmounting, We will tear down the timer in the componentWillUnmount() lifecycle method:\n        console.log('Clock componentWillUnmount');\n        clearInterval(this.timerID);\n    }; \n\n    tick() {\n        this.setState({\n          date: new Date()  //It will use this.setState() to schedule updates to the component local state:\n        });\n    };\n    \n    render() {\n      return (\n        <div>\n          <h1>Clock</h1>\n          It is {this.state.date.toLocaleTimeString()}.\n        </div>\n      );\n    };\n  };\nexport default Clock;\n/**\n  ReactDOM.render(\n    <Clock />,\n    document.getElementById('root')\n  );\n */  \n/**In applications with many components, it’s very important to free up resources taken by the components when they are destroyed. */\n/**Now the clock ticks every second.\n\nLet’s quickly recap what’s going on and the order in which the methods are called:\n1    When <Clock /> is passed to ReactDOM.render(), React calls the constructor of the Clock component. Since Clock needs to display the current time, it initializes this.state with an object including the current time. We will later update this state.\n2    React then calls the Clock component’s render() method. This is how React learns what should be displayed on the screen. React then updates the DOM to match the Clock’s render output.\n3    When the Clock output is inserted in the DOM, React calls the componentDidMount() lifecycle method. Inside it, the Clock component asks the browser to set up a timer to call the component’s tick() method once a second.\n4    Every second the browser calls the tick() method. Inside it, the Clock component schedules a UI update by calling setState() with an object containing the current time. Thanks to the setState() call, React knows the state has changed, and calls the render() method again to learn what should be on the screen. This time, this.state.date in the render() method will be different, and so the render output will include the updated time. React updates the DOM accordingly.\n5    If the Clock component is ever removed from the DOM, React calls the componentWillUnmount() lifecycle method so the timer is stopped.\n */\n","import React from 'react';\n\nconst scaleNames = {\n    c: 'Celsius',\n    f: 'Fahrenheit'\n  };\n\nclass TemperatureInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n    };\n    handleChange(e) {\n      this.props.onTemperatureChange(e.target.value);\n    };\n  \n    render() {\n      const temperature = this.props.temperature;\n      const scale = this.props.scale;\n      return (\n        <fieldset>\n          <legend>Enter temperature in {scaleNames[scale]}:</legend>\n          <input value={temperature}\n                 onChange={this.handleChange} />\n        </fieldset>\n      );\n    };\n  };\nexport default TemperatureInput;\n","function tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n      return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  };\nexport default tryConvert;\n","function toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n  };\nexport default toCelsius;\n","function toFahrenheit(celsius) {\n    return (celsius * 9 / 5) + 32;\n  };\nexport default toFahrenheit;\n","import React from 'react';\nfunction BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n      return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n  };\n  export default BoilingVerdict;","import React from 'react';\nimport TemperatureInput from './TemperatureInput';\nimport tryConvert from './TryConvert';\nimport toCelsius from './toCelsius';\nimport toFahrenheit from './toFahrenheit';\nimport BoilingVerdict from './BoilingVerdict';\n\n\n//https://reactjs.org/docs/lifting-state-up.html\nclass TemperatureCalculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n      this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n      this.state = {temperature: '', scale: 'c'};\n    }\n  \n    handleCelsiusChange(temperature) {\n      this.setState({scale: 'c', temperature});\n    }\n  \n    handleFahrenheitChange(temperature) {\n      this.setState({scale: 'f', temperature});\n    }\n  \n    render() {\n      const scale = this.state.scale;\n      const temperature = this.state.temperature;\n      const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;             // see f --> c\n      const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;       // see c --> f\n  \n      return (\n        <div><h3>TemperatureCalculator</h3>\n          <TemperatureInput\n            scale=\"c\"\n            temperature={celsius}\n            onTemperatureChange={this.handleCelsiusChange} />\n          <TemperatureInput\n            scale=\"f\"\n            temperature={fahrenheit}\n            onTemperatureChange={this.handleFahrenheitChange} />\n          <BoilingVerdict\n            celsius={parseFloat(celsius)} />\n        </div>\n      );\n    }\n  }\n  export default TemperatureCalculator;\n","import React from 'react';\n\n//function Otsikko(props) {\n\n//console.log(\"Otsikko.js - loading\");\n\n\n//const Otsikko = ({otsake}) => {\nfunction Otsikko(props) {\n    //console.log(\"Otsikko.js - props\",props);\n    const otsake=props;\n    //console.log(\"Otsikko.js - otsake.kurssi.nimi\", otsake.kurssi.nimi);\n //   //console.log(\"Otsikko.js - otsake.nimi\", otsake.nimi);\n    const otsikko15 = (<div>\n                        <h2>Otsikko {otsake.kurssi.nimi}</h2>\n                       </div>\n    );\n//console.log(\"Otsikko.js - just before return\");\n\nreturn (\n    <div id=\"otsikko15\">\n      <hr />\n      {otsikko15}\n    </div>\n  );\n};\n\nexport default Otsikko;","import React from 'react';\n\nfunction Sisalto(props) {\n  //console.log(\"Sisalto.js - loading\");\n  //console.log(\"  Sisalto.js - props\", props);\n  const content = props.kurssi.osat.map((osa) =>\n    <div key={osa.id}>\n      <p>{osa.id} {osa.nimi} {osa.tehtavia}</p>\n    </div>\n  );\n\n  //console.log(\"   Sisalto.js - just before return\");\n\n  return (\n    <div id=\"osat\">\n      <hr />\n      {content}\n    </div>\n  );\n};\n\nexport default Sisalto;\n","import React from 'react';\n\nfunction Yhteensa(props) {\n    //console.log(\"Yhteensa.js - loading\");\n    //console.log(\"  Yhteensa.js - props\", props);\n\n    const sumteht = props.kurssi.osat.reduce(function(sum, osa) {\n        //console.log('Yhteensa sum',sum,'osa',osa, 'osa.tehtavia',osa.tehtavia);     \n        return sum + osa.tehtavia;\n    }, 0);\n\n    const sumosa = props.kurssi.osat.reduce(function(sum,osa) {\n        //console.log('Yhteensa osia',sum); //INFO shows previous value :)\n        return sum + 1;\n    }, 0);\n\n    /** obsoleted\n    const summa = {\n        hwtot : 0,\n        osatot : 0\n    }; \n    props.kurssi.osat.forEach((osa) => {\n        summa.hwtot=summa.hwtot+osa.tehtavia;\n        summa.osatot=summa.osatot+1;\n        //console.log('osa.id:', osa.id,'osa.tehtavia:',osa.tehtavia,'summa.hwtot:', summa.hwtot,'summa.osatot:',summa.osatot,'osa.nimi:', osa.nimi); \n      });\n        ////console.log(\"Yhteensa.js - just before return\", summa.hwtot, summa.osatot);\n        <h3>Yhteensä tehtäviä {summa.hwtot} kappaletta kurssin {summa.osatot} osassa</h3>\n\n      */\n    //console.log(\"Yhteensa.js - just before return\", sumteht, sumosa);\n\n    return (\n    <div id=\"summaosa\">\n        <h3>Yhteensä tehtäviä {sumteht} kappaletta kurssin {sumosa} osassa</h3>\n    </div>\n    );\n};\n\nexport default Yhteensa;\n","import React from 'react';\nimport Otsikko from './Otsikko';\nimport Sisalto from './Sisalto';\nimport Yhteensa from './Yhteensa';\n\n//console.log(\"Kurssi.js - loading\");\n\nfunction Kurssi(props) {\n    //console.log(\"Kurssi.js - props\", props);\n    //console.log(\"Kurssi.js - props.kurssi\", props.kurssi);\n    //const parsikurssi = props.kurssi;\n    //console.log(\"Kurssi.js - parsikurssi\", parsikurssi);\n    const ots=Otsikko(props);\n    const yht=Yhteensa(props);\n    const osat=Sisalto(props);\n    return (<><h4>Kurssi.js</h4>\n        <div id=\"otsikko\"><h5>{ots}</h5>\n        <div id=\"osat\">{osat}\n        <div id=\"yhteensa\">{yht}</div>  \n        </div>\n        </div>\n        </>\n        )\n    };\n\nexport default Kurssi;\n","import React from 'react';\nimport Kurssi from './Kurssi';\n\n\n//console.log(\"Kurssit.js - loading\");\n\n\nfunction Kurssit(props) {\n    //console.log(\"Kurssit.js - props\", props);\n    const kurssix = props.kurssit;\n    //console.log(\"Kurssit.js - kurssix\", kurssix);\n    /**var found = kurssix.find(function(kurssi) {\n        //  return kurssi.id =2 ;\n          return kurssi.id =1 ;\n        });\n     */    \n    //console.log(\"Kurssit - found\",found);\n\n    //const kala = kurssix.map((kurssi) => kurssi.nimi);\n    const content = kurssix.map((mappedkurssi) =>\n    <div key={mappedkurssi.id} >\n      <Kurssi kurssi={mappedkurssi}/>\n    </div>\n    );\n    //console.log('Kurssit.js - kala', kala);\n    return (\n        <div>\n            {content}\n        </div>\n    )\n};\n\nexport default Kurssit;\n\n/**\n    <div key={mappedkurssi.id}>\n    <h3>{mappedkurssi.nimi}</h3>\n    <p><Kurssi kurssi={mappedkurssi}/></p>\n    </div>\n */","import React from 'react';\nimport AppCountries from './components/RestCountries/AppCountries';\nimport AppPhoneBook from './components/PhoneBook/AppPhoneBook';\nimport AppNotes from './components/Notes/AppNotes';\nimport Clock from './components/Clock/Clock';\nimport TemperatureCalculator from './components/Temperature/TemperatureCalculator';\nimport Kurssit from './components/Kurssi/Kurssit';\n//import AxiosDemosNotes from './components/AxiosDemos/AxiosDemoNotes';\n//import AxiosDemosPersons from './components/AxiosDemos/AxiosDemoPersons';\n\n\n\n\nconsole.log(\"App.js - imports loaded\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      kurssit: props.kurssit,\n    };\n  };\n\n/**console.log(\"App.js - const App=(props) loading\");\nconsole.log(\"App.js - props\",props);\nconsole.log(\"App.js - kurssit\", kurssit);\nconsole.log(\"App.js - notes\", notes);\nconsole.log(\"App.js - just before return\");\n */\n\n  render() { \n//        <AppPhoneBook />\n\n    return (\n      <div>\n        <div id=\"opetusohjelma\"><h1>App hworks for part2 by Paavo</h1> + some lecture stuff\n        <div id=\"AppPhoneBook\"><h2>AppPhoneBook HW2.6-HW2.11, HW2.14-HW2.19</h2><AppPhoneBook /></div>\n        <div id=\"AppCountries\"><h2>AppCountries HW2.11-HW2.13</h2><AppCountries /></div>        \n        <div id=\"Kurssit\"><h2>Kurssit HW2.1-HW2.5</h2><Kurssit kurssit={this.state.kurssit}/></div>\n        <div id=\"AppNotes\"><AppNotes /></div>\n        <div id=\"Clock\"><h2>Clock</h2><Clock /></div>\n        <div id=\"TemperatureCalculator\"><h2>TemperatureCalculator</h2><TemperatureCalculator /></div>\n        </div>\n        </div>\n    );\n  };\n};\n\nexport default App\n/**\n *      <div id=\"AppPhoneBook\"><AppPhoneBook /></div>\n        <div id=\"AxiosDemosNotes\"><AxiosDemosNotes /></div>\n        <div id=\"AxiosDemosPersons\"><AxiosDemosPersons /></div>\n        <div id=\"AppNotes\"><AppNotes /></div>\n        <div id=\"Clock\"><Clock /></div>\n        <div id=\"TemperatureCalculator\"><TemperatureCalculator /></div>\n        <div id=\"Kurssit\">\n        <Kurssit kurssit={this.state.kurssit}/>\n        </div>\n \n */\n","const notes = [\n    {\n      id: 1,\n      content: 'HTML on helppoa',\n      date: '2017-12-10T17:30:31.098Z',\n      important: true\n    },\n    {\n      id: 2,\n      content: 'Selain pystyy suorittamaan vain javascriptiä',\n      date: '2017-12-10T18:39:34.091Z',\n      important: false\n    },\n    {\n      id: 3,\n      content: 'HTTP-protokollan tärkeimmät metodit ovat GET ja POST',\n      date: '2017-12-10T19:20:14.298Z',\n      important: true\n    }\n  ];\nexport default notes;","// ./src/datafiles/Kurssit/halfstackkurssi.js\nconsole.log(\"halfstackkurssi.js loading\");\n\nconst kurssi = {\n    nimi: 'Half Stack -sovelluskehitys',\n    id: 1,\n    osat: [\n      {\n        nimi: 'Reactin perusteet',\n        tehtavia: 10,\n        id: 1\n      },\n      {\n        nimi: 'Tiedonvälitys propseilla',\n        tehtavia: 7,\n        id: 2\n      },\n      {\n        nimi: 'Komponenttien tila',\n        tehtavia: 14,\n        id: 3\n      }\n    ]\n};\n\nexport default kurssi;","// ./src/datafiles/Kurssit/nodekurssi.js\nconsole.log(\"nodekurssi.js loading\");\n\nconst kurssi = {\n    nimi: 'Node.js',\n    id: 2,\n    osat: [\n      {\n        nimi: 'Routing',\n        tehtavia: 3,\n        id: 1\n      },\n      {\n        nimi: 'Middlewaret',\n        tehtavia: 7,\n        id: 2\n      }\n    ]\n};\n\nexport default kurssi;","//import React from 'react';\nimport halfstackkurssi from '../../datafiles/Kurssit/halfstackkurssi';\nimport nodekurssi from '../../datafiles/Kurssit/nodekurssi';\n//console.log(\"montakurssia.js loading\");\n\n//console.log(halfstackkurssi);\n//console.log(nodekurssi);\n\nconst kurssit = [halfstackkurssi,nodekurssi];\n\n\n//console.log(kurssit);\n//console.log(kurssit.length);\n\n/** just hardcoding here to test \nconst kurssit2 = [\n  {\n    nimi: 'Half Stack -sovelluskehitys',\n    id: 1,\n    osat: [\n      {\n        nimi: 'Reactin perusteet',\n        tehtavia: 10,\n        id: 1\n      },\n      {\n        nimi: 'Tiedonvälitys propseilla',\n        tehtavia: 7,\n        id: 2\n      },\n      {\n        nimi: 'Komponenttien tila',\n        tehtavia: 14,\n        id: 3\n      }\n    ]\n  },\n  {\n    nimi: 'Node.js',\n    id: 2,\n    osat: [\n      {\n        nimi: 'Routing',\n        tehtavia: 3,\n        id: 1\n      },\n      {\n        nimi: 'Middlewaret',\n        tehtavia: 7,\n        id: 2\n      }\n    ]\n  }\n];\n */\n//console.log(kurssit2);\n//console.log(kurssit2.length);\n\n//const jabba=JSON.stringify(kurssit) === JSON.stringify(kurssit2);\n//console.log(\"Check if montakurssia can load from files the kurssi parts = \", jabba);\n\nexport default kurssit;","const persons = [\n    { id: 1,\n      name: 'Arto Hellas',\n      phonenumber: '+358 1234 567'\n    },\n    { id: 2, name: 'Martti Tienari', phonenumber: '040-123456' },\n    { id: 3, name: 'Arto Järvinen', phonenumber: '040-123456' },\n    { id: 4, name: 'Lea Kutvonen', phonenumber: '040-123456' }\n  ];\nconsole.log(persons);\nconsole.log(persons[1].name);\n\n//Filter array of objects, which property matches value, returns array:\nvar result = persons.filter(obj => {return obj.name === 'Arto Hellas'});\nconsole.log(result);\nconst searchitpersons = persons.filter(obj => {return obj.name.toUpperCase() === 'ARTO HELLAS' });\n\nconsole.log('searchitpersons',searchitpersons);\nconst searchitpersons2 = persons.filter(obj => {return obj.name.toUpperCase().includes('ARTO HELLAS') });\n\nconsole.log('searchitpersons2',searchitpersons2);\nconst kala='AR';\nconst searchitpersons3 = persons.filter(obj => {return obj.name.toUpperCase().includes(kala) });\n\nconsole.log('searchitpersons3',searchitpersons3);\n\nexport default persons;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport notes from './datafiles/Notes/notes';\nimport montakurssia from './components/Kurssi/montakurssia';\nimport persons from './datafiles/PhoneBook/persons';\n//import './components/AxiosDemos/AxiosDemos.js'; //FIXME not needed in Heroku backend tricks hw3.1x\n\nconsole.log(\"Index.js loading\");\n//const kala=AxiosInitialFetchPersons;\n\n//console.log(\"Index.js axios kala\", kala);\n\n\nReactDOM.render(\n  <App notes={notes} kurssit={montakurssia} persons={persons}/>,\n  document.getElementById('root')\n);\n//  <App notes={notes} kurssit={montakurssia} persons={persons}/>,\n"],"sourceRoot":""}